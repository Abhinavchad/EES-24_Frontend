import React, { useState } from 'react';
import "./About.css";

export const About = () => {



  const [currentSlide, setCurrentSlide] = useState(0);

  const nextSlide = () => {
    setCurrentSlide((prevSlide) => (prevSlide + 1) % 4); // Assuming you have 4 images
  };

  const prevSlide = () => {
    setCurrentSlide((prevSlide) => (prevSlide - 1 + 4) % 4);
  };



  const handleClick1 = () => {
    const iteam1 = document.getElementById('img1');
    const iteam2 = document.getElementById('img2');
    if (iteam1.style.display === 'none') {
      iteam1.style.display = 'flex';
    }
    else {
      iteam1.style.display = 'none'
    }
    if (iteam2.style.display === 'none') {
      iteam2.style.display = 'flex';
    }
    else {
      iteam2.style.display = 'none'
    }

    const myDiv = document.getElementById('myDiv1');
    if (myDiv) {
      const currentWidth = myDiv.style.width; // Default width
      console.log(currentWidth);
      if (currentWidth === '10%') {
        const newWidth = '70%';
        myDiv.style.transition = 'width 0.3s ease';
        myDiv.style.width = newWidth;

        [2, 3, 4].forEach(index => {
          const currentDiv2 = document.getElementById(`myDiv${index}`);
          console.log(myDiv.style.width);
          if (currentDiv2) {
            const currentWidth2 = currentDiv2.style.width;

            console.log(currentWidth2);
            if (currentWidth2 === '70%') {

              const newWidth2 = '10%';
              const iteam3 = document.getElementById(`img${index * 2 - 1}`);
              const iteam4 = document.getElementById(`img${index * 2}`);
              if (iteam3.style.display === 'none') {
                iteam3.style.display = 'flex';
                iteam4.style.display = 'none';
              }
              currentDiv2.style.width = newWidth2;

              currentDiv2.style.transition = 'width 0.3s ease';
            }
          }
        });
      }
    }
  };


  const handleClick2 = () => {

    const iteam1 = document.getElementById('img3');
    const iteam2 = document.getElementById('img4');

    if (iteam1.style.display === 'none') {
      iteam1.style.display = 'flex';
    }
    else {
      iteam1.style.display = 'none'
    }
    if (iteam2.style.display === 'none') {
      iteam2.style.display = 'flex';
    }
    else {
      iteam2.style.display = 'none'
    }

    const myDiv = document.getElementById('myDiv2');
    if (myDiv) {
      const currentWidth = myDiv.style.width; // Default width
      // const newWidth = currentWidth === '10%' ? '70%' : '10%'; // Toggle between '200px' and '400px'
      console.log(currentWidth);
      if (currentWidth === '10%') {
        const newWidth = '70%';
        myDiv.style.transition = 'width 0.3s ease';
        myDiv.style.width = newWidth;

        [1, 3, 4].forEach(index => {
          const currentDiv2 = document.getElementById(`myDiv${index}`);
          console.log(myDiv.style.width);
          if (currentDiv2) {

            const currentWidth2 = currentDiv2.style.width;

            console.log(currentWidth2);
            if (currentWidth2 === '70%') {

              const newWidth2 = '10%';
              const iteam3 = document.getElementById(`img${index * 2 - 1}`);
              const iteam4 = document.getElementById(`img${index * 2}`);
              if (iteam3.style.display === 'none') {
                iteam3.style.display = 'flex';
                iteam4.style.display = 'none';
              }

              currentDiv2.style.width = newWidth2;

              currentDiv2.style.transition = 'width 0.3s ease';
            }
          }
        });
      }


    }



  };

  

  const handleClick3 = () => {

    const iteam1 = document.getElementById('img5');
    const iteam2 = document.getElementById('img6');

    if (iteam1.style.display === 'none') {
      iteam1.style.display = 'flex';
    }
    else {
      iteam1.style.display = 'none'
    }
    if (iteam2.style.display === 'none') {
      iteam2.style.display = 'flex';
    }
    else {
      iteam2.style.display = 'none'
    }

    const myDiv = document.getElementById('myDiv3');
    if (myDiv) {
      const currentWidth = myDiv.style.width; // Default width
      // const newWidth = currentWidth === '10%' ? '70%' : '10%'; // Toggle between '200px' and '400px'
      console.log(currentWidth);
      if (currentWidth === '10%') {
        const newWidth = '70%';
        myDiv.style.transition = 'width 0.3s ease';
        myDiv.style.width = newWidth;

        [1, 2, 4].forEach(index => {
          const currentDiv2 = document.getElementById(`myDiv${index}`);
          console.log(myDiv.style.width);
          if (currentDiv2) {

            const currentWidth2 = currentDiv2.style.width;

            console.log(currentWidth2);
            if (currentWidth2 === '70%') {

              const newWidth2 = '10%';
              const iteam3 = document.getElementById(`img${index * 2 - 1}`);
              const iteam4 = document.getElementById(`img${index * 2}`);
              if (iteam3.style.display === 'none') {
                iteam3.style.display = 'flex';
                iteam4.style.display = 'none';
              }



              currentDiv2.style.width = newWidth2;


              currentDiv2.style.transition = 'width 0.3s ease';
            }
          }
        });
      }
    }

  };

 
  const handleClick4 = () => {

    const iteam1 = document.getElementById('img7');
    const iteam2 = document.getElementById('img8');

    if (iteam1.style.display === 'none') {
      iteam1.style.display = 'flex';
    }
    else {
      iteam1.style.display = 'none'
    }
    if (iteam2.style.display === 'none') {
      iteam2.style.display = 'flex';
    }
    else {
      iteam2.style.display = 'none'
    }

    const myDiv = document.getElementById('myDiv4');
    if (myDiv) {
      const currentWidth = myDiv.style.width; // Default width
      // const newWidth = currentWidth === '10%' ? '70%' : '10%'; // Toggle between '200px' and '400px'
      console.log(currentWidth);
      if (currentWidth === '10%') {
        const newWidth = '70%';
        myDiv.style.transition = 'width 0.3s ease';
        myDiv.style.width = newWidth;

        [1, 2, 3].forEach(index => {
          const currentDiv2 = document.getElementById(`myDiv${index}`);
          console.log(myDiv.style.width);
          if (currentDiv2) {

            const currentWidth2 = currentDiv2.style.width;
            console.log(currentWidth2);
            if (currentWidth2 === '70%') {

              const newWidth2 = '10%';
              const iteam3 = document.getElementById(`img${index * 2 - 1}`);
              const iteam4 = document.getElementById(`img${index * 2}`);
              if (iteam3.style.display === 'none') {
                iteam3.style.display = 'flex';
                iteam4.style.display = 'none';
              }

              currentDiv2.style.width = newWidth2;


              currentDiv2.style.transition = 'width 0.3s ease';
            }
          }
        });
      }

      // Add transition for the width property
      // Set the width dynamically
    }


  };




  return (
  
    <div>
    <div className=" w-sceen h-[724px] pt-[117px] flex desktopview    " >
      <div className="w-[5.7%]   ">
      {/* <img src="about_us_desktopview_Lines - Wave.svg"  style={{ width:'40px', height: '100%' }}    /> */}
      
      </div>
      <div className=" w-[94.3%] h-full border-solid border-[0.5px]  AboutUs flex overflow-hidden   ">
        {/* bg-[#000] */}
        <div id="myDiv1" className=' h-full flex     ' style={{ cursor: 'pointer', width: '70%' }}  >
          {/* <p>This is my div1</p>  */}
          <div id='img2' style={{ width: '100%', display: 'flex' }}    >
            <div className=' block w-[100%] Aboutus'>

              <div className=" h-[95px] w-[100%] items-center flex ml-[20px]  ">
                <svg width="69" height="67" viewBox="0 0 69 67" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <rect x="1.5" y="1.5" width="66" height="64" rx="4.5" fill="black" stroke="white" stroke-width="3" />
                  <path d="M38.7725 38.9092H10.3367L7.80371 43.1418L14.1977 53.8441H47.7042L46.8073 52.3459L38.7725 38.907V38.9092ZM10.1884 43.144L11.5279 40.9068H37.579L44.1213 51.851H15.3889L10.1884 43.144Z" fill="white" />
                  <path d="M62.0522 42.6437L51.9085 25.671L45.5979 15.103L36.708 29.9774L50.9676 53.8454H55.9526L62.3512 43.1431L62.0522 42.6437ZM54.759 51.8501H52.1588L39.0927 29.9774L45.5979 19.096L50.1194 26.6698L59.9642 43.1431L54.759 51.8501Z" fill="white" />
                  <path d="M43.9593 12.3651L43.6604 11.8657L41.4703 8.19751H28.6777L18.242 25.6697L11.9639 36.1726H29.7368L43.957 12.3651H43.9593ZM15.5444 34.1751L20.0311 26.6684L29.8712 10.1951H40.2768L41.5723 12.3651L28.5433 34.1751H15.5421H15.5444Z" fill="white" />
                </svg>
              </div>

              <div className=' text-[50px] text-white h-[113px] w-[59vw] justify-between  border-solid border-[0.5px] flex xyz1 '>
                <div className="about_us_title ml-[44px] items-center justify-center flex ">
                  ABOUT US
                </div>
                <div className=" items-center justify-center h-[113px] w-[130px] flex ">
                  <svg width="76" height="71" viewBox="0 0 76 71" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M76 60.6863L64.8854 71L12 71L-8.18568e-06 60.6863L-1.97867e-06 11.3167L5.99998 6L12 1.75741e-05L64.8854 1.13449e-05L76 11.3167L76 60.6863Z" fill="#FEFEFE" />
                    <path d="M51 60L26 35.5L51 11" stroke="black" stroke-width="10" />
                  </svg>
                </div>
              </div>

              {/* also decrease font size */}
              {/* border-solid border-[0.5px] */}
              <div className=' flex text-white w-[54vw] h-[410px] ml-[44px]    textarea mt-[40px]'>
                Lorem ipsum dolor sit amet consectetur adipisicing elit. Et pariatur neque tempore, numquam cumque ratione. Ducimus itaque quam sit sed, animi deleniti id amet sunt voluptatum iusto quidem suscipit temporibus veritatis dolor? Quibusdam culpa modi suscipit, quis necessitatibus placeat omnis iure, incidunt animi id cupiditate ipsum, voluptatem et voluptate ratione Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptates omnis officia nisi natus molestiae aspernatur 
              </div>
              <div className=" mt-[0px] ml-[25px] mb-[0px]  ">
                <svg width="46vw" height="59" viewBox="0 0 792 59" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <rect width="396.58" height="59" fill="white" />
                  <rect x="399.08" y="0" width="390.42" height="59" fill="black" stroke="white" stroke-width="0.5" />
                </svg>

              </div>
            </div>
          </div>
          <div id='img1' onClick={handleClick1} className="rect" style={{ display: 'none', zIndex: '12' }}>
            {/* after click */}
            <div className="rect text-black items-center flex flex-col  justify-between">
              <div>
                <svg width="42" height="23" viewBox="0 0 42 23" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M21 1L39.0157 1C40.819 1 41.7013 3.19879 40.3981 4.44528L22.3824 21.6777C21.6092 22.4173 20.3908 22.4173 19.6176 21.6777L1.60189 4.44529C0.298737 3.19879 1.18102 1 2.98433 1L21 1Z" fill="#121519" stroke="black" />
                </svg>

              </div>
              <div>


                {/* This is my div222 */}
                <div className='rotate-90 overflow-hidden '>
                <p className='font-michroma font-extrabold text-[46px]'>ABOUTUS</p>

                </div>


              </div>

              <div className=' items-center justify-center'>
                <img src="ees_logo_FCFBFC 1 (1).svg" className='w-[120px] h-[130px]'></img>
               </div>


            </div>
          </div>







          {/* <div id='img1' className='flex   ' style={{width:'100%'}}>
       
       <div className=' relative ' style={{width:'100%', height:'100%'}}>
       <div className='buttom'> </div>
       </div>
       
       </div>

       <div id ='img2' className='flex'  style={{width:'100%',display:'none',backgroundColor: 'red'}}>
       <img src={image2}  className='flex object-cover '  style={{width:'100%',}}></img>
       </div> */}


          {/* <div>hi</div> */}
        </div>

        {/* backgroundColor: 'red' */}
        {/* zIndex: '9' */}
        <div id="myDiv2" className=' h-full flex  ' style={{ cursor: 'pointer', width: '10%' }}>

          <div id='img3' onClick={handleClick2} className='flex rect   ' style={{ width: '100%', zIndex: '9'  }}>

            <div className="rect text-black items-center flex flex-col  justify-between">
              <div>
                <svg width="42" height="23" viewBox="0 0 42 23" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M21 1L39.0157 1C40.819 1 41.7013 3.19879 40.3981 4.44528L22.3824 21.6777C21.6092 22.4173 20.3908 22.4173 19.6176 21.6777L1.60189 4.44529C0.298737 3.19879 1.18102 1 2.98433 1L21 1Z" fill="#121519" stroke="black" />
                </svg>

              </div>
              <div>


                {/* This is my div222 */}
                <svg width="57" height="303" viewBox="0 0 57 303" fill="#121519" xmlns="http://www.w3.org/2000/svg">
                  <path d="M56.9307 54.5362L34.4307 54.5362C31.7744 54.5362 29.3525 54.4971 27.165 54.419C24.9775 54.3604 23.0146 54.1358 21.2764 53.7452C19.5381 53.3741 18.0244 52.7784 16.7354 51.9581C15.4463 51.1378 14.3721 49.9659 13.5127 48.4424C12.6729 46.919 12.0479 44.9756 11.6377 42.6124C11.208 40.2686 10.9932 37.378 10.9932 33.9405V20.7569C10.9932 17.3194 11.208 14.419 11.6377 12.0557C12.0479 9.71198 12.6729 7.77838 13.5127 6.25494C14.3721 4.73151 15.4463 3.54987 16.7354 2.71002C18.0244 1.88971 19.5381 1.28424 21.2764 0.893616C23.0146 0.522522 24.9775 0.307678 27.165 0.249084C29.3525 0.190491 31.7744 0.161194 34.4307 0.161194L56.9307 0.161194V5.78619L34.4307 5.78619C31.6182 5.78619 29.1963 5.80573 27.165 5.84479C25.1533 5.90338 23.4541 6.0694 22.0674 6.34283C20.6807 6.61627 19.5674 7.04596 18.7275 7.6319C17.8877 8.23737 17.2432 9.09674 16.7939 10.21C16.3447 11.3233 16.042 12.7296 15.8857 14.4288C15.749 16.1475 15.6807 18.2569 15.6807 20.7569V33.9405C15.6807 36.421 15.749 38.5206 15.8857 40.2393C16.042 41.9581 16.3447 43.3643 16.7939 44.4581C17.2432 45.5714 17.8877 46.4307 18.7275 47.0362C19.5674 47.6417 20.6807 48.0811 22.0674 48.3546C23.4541 48.6475 25.1533 48.8135 27.165 48.8526C29.1963 48.8917 31.6182 48.9112 34.4307 48.9112L56.9307 48.8819V54.5362ZM11.2861 90.753C11.2861 87.003 11.5596 83.8194 12.1064 81.2022C12.6533 78.585 13.5908 76.4561 14.9189 74.8155C16.2471 73.1749 18.0342 71.9835 20.2803 71.2413C22.5264 70.4991 25.3486 70.128 28.7471 70.128C32.2627 70.128 35.1729 70.4991 37.4775 71.2413C39.7822 71.9835 41.6084 73.1749 42.9561 74.8155C44.3037 76.4561 45.251 78.585 45.7979 81.2022C46.3447 83.8194 46.6182 87.003 46.6182 90.753C46.6182 93.4092 46.4814 95.6358 46.208 97.4327C45.9346 99.2296 45.5928 100.694 45.1826 101.827C44.7725 102.98 44.3232 103.849 43.835 104.435C43.3662 105.04 42.9268 105.48 42.5166 105.753L56.9307 105.753V111.378L11.9307 111.378V105.753H16.9404C16.9404 105.753 16.3838 105.284 15.2705 104.347C14.4697 103.526 13.8252 102.618 13.3369 101.622C12.8486 100.626 12.3799 99.2296 11.9307 97.4327C11.501 95.6358 11.2861 93.4092 11.2861 90.753ZM15.6807 90.753C15.6807 92.628 15.7197 94.2979 15.7979 95.7628C15.8955 97.2276 16.0908 98.5167 16.3838 99.6299C16.6768 100.743 17.1064 101.681 17.6729 102.442C18.2588 103.224 19.0303 103.858 19.9873 104.347C20.9443 104.835 22.126 105.187 23.5322 105.401C24.958 105.636 26.667 105.753 28.6592 105.753C30.7295 105.753 32.4873 105.636 33.9326 105.401C35.3975 105.187 36.6182 104.835 37.5947 104.347C38.5908 103.858 39.3721 103.224 39.9385 102.442C40.5049 101.681 40.9346 100.743 41.2275 99.6299C41.54 98.5167 41.7354 97.2276 41.8135 95.7628C41.8916 94.2979 41.9307 92.628 41.9307 90.753C41.9307 88.5655 41.8623 86.671 41.7256 85.0694C41.5889 83.4874 41.3447 82.1397 40.9932 81.0264C40.6416 79.9131 40.1533 79.0049 39.5283 78.3018C38.9033 77.6182 38.1025 77.0811 37.126 76.6905C36.1494 76.3194 34.9678 76.0655 33.5811 75.9288C32.2139 75.8116 30.6025 75.753 28.7471 75.753C26.9111 75.753 25.3096 75.8116 23.9424 75.9288C22.5947 76.0655 21.4326 76.3194 20.4561 76.6905C19.499 77.0811 18.708 77.6182 18.083 78.3018C17.458 79.0049 16.9697 79.9131 16.6182 81.0264C16.2666 82.1397 16.0225 83.4874 15.8857 85.0694C15.749 86.671 15.6807 88.5655 15.6807 90.753ZM11.9307 143.815L45.6807 126.003V132.565L15.6807 147.565L45.6807 161.628V168.19L11.9307 151.315L10.0557 150.378C9.11816 149.909 8.23926 149.44 7.41895 148.972C6.5791 148.523 5.81738 148.005 5.13379 147.419C4.43066 146.833 3.80566 146.14 3.25879 145.339C2.71191 144.538 2.25293 143.552 1.88184 142.38C1.49121 141.228 1.19824 139.851 1.00293 138.249C0.788086 136.648 0.680664 134.753 0.680664 132.565H5.36816C5.36816 134.44 5.44629 136.023 5.60254 137.312C5.73926 138.601 5.9541 139.675 6.24707 140.534C6.52051 141.413 6.85254 142.116 7.24316 142.644C7.63379 143.171 8.07324 143.61 8.56152 143.962C9.0498 144.314 9.57715 144.607 10.1436 144.841C10.71 145.095 11.3057 145.378 11.9307 145.69V143.815ZM16.5596 214.544C16.3252 214.485 15.7393 214.046 14.8018 213.226C14.0986 212.64 13.4736 211.858 12.9268 210.882C12.3994 209.905 11.9893 208.597 11.6963 206.956C11.3838 205.335 11.2275 203.196 11.2275 200.54C11.2275 197.005 11.4131 193.987 11.7842 191.487C12.1357 188.987 12.6826 186.946 13.4248 185.364C14.1865 183.782 15.1533 182.62 16.3252 181.878C17.4971 181.155 18.8936 180.794 20.5146 180.794C22.2139 180.794 23.6494 180.989 24.8213 181.38C26.0127 181.79 27.0088 182.376 27.8096 183.138C28.6104 183.919 29.2354 184.857 29.6846 185.95C30.1338 187.044 30.4756 188.284 30.71 189.671C30.9443 191.077 31.0908 192.61 31.1494 194.271C31.208 195.931 31.2373 197.698 31.2373 199.573C31.2373 202.249 31.1201 204.485 30.8857 206.282C30.6709 208.079 30.3877 209.544 30.0361 210.677C29.7041 211.829 29.3428 212.698 28.9521 213.284C28.5615 213.87 28.2002 214.29 27.8682 214.544C30.0557 214.544 31.9209 214.446 33.4639 214.251C35.0068 214.075 36.2959 213.773 37.3311 213.343C38.3662 212.933 39.1865 212.396 39.792 211.732C40.417 211.067 40.8857 210.247 41.1982 209.271C41.5107 208.314 41.7061 207.19 41.7842 205.901C41.8818 204.612 41.9307 203.138 41.9307 201.478C41.9307 198.899 41.8623 196.761 41.7256 195.062C41.6084 193.362 41.3643 192.015 40.9932 191.019C40.6221 190.023 40.1045 189.319 39.4404 188.909C38.7959 188.499 37.9463 188.294 36.8916 188.294V182.669C38.6689 182.669 40.1729 182.982 41.4033 183.607C42.6338 184.251 43.6299 185.306 44.3916 186.771C45.1729 188.255 45.7393 190.198 46.0908 192.601C46.4424 195.003 46.6182 197.962 46.6182 201.478C46.6182 204.915 46.335 207.825 45.7686 210.208C45.2021 212.591 44.2061 214.515 42.7803 215.98C41.3545 217.464 39.4307 218.528 37.0088 219.173C34.6064 219.837 31.5596 220.169 27.8682 220.169H11.9307V214.544H16.5596ZM15.6807 201.478C15.6807 203.958 15.7979 206.028 16.0322 207.689C16.2666 209.368 16.6182 210.716 17.0869 211.732C17.5557 212.747 18.1416 213.47 18.8447 213.899C19.5479 214.329 20.3682 214.544 21.3057 214.544C22.2432 214.544 23.0342 214.29 23.6787 213.782C24.3428 213.294 24.8799 212.464 25.29 211.292C25.7002 210.14 25.9932 208.607 26.1689 206.692C26.3643 204.778 26.4619 202.415 26.4619 199.603C26.4619 196.79 26.4131 194.515 26.3154 192.776C26.2178 191.058 25.9932 189.73 25.6416 188.792C25.29 187.855 24.7725 187.22 24.0889 186.888C23.4053 186.575 22.4775 186.419 21.3057 186.419C20.1338 186.419 19.1768 186.585 18.4346 186.917C17.7119 187.269 17.1455 187.972 16.7354 189.026C16.3252 190.081 16.042 191.595 15.8857 193.567C15.749 195.56 15.6807 198.196 15.6807 201.478ZM11.9307 272.323V266.698H30.9736C33.0049 266.698 34.7139 266.562 36.1006 266.288C37.5068 266.034 38.6396 265.497 39.499 264.677C40.3584 263.876 40.9736 262.733 41.3447 261.249C41.7354 259.784 41.9307 257.851 41.9307 255.448C41.9307 252.812 41.7061 250.644 41.2568 248.944C40.8271 247.245 40.2119 245.907 39.4111 244.931C38.6299 243.954 37.6826 243.271 36.5693 242.88C35.4561 242.509 34.2158 242.323 32.8486 242.323H11.9307L11.9307 236.698H45.6807V242.323H40.3486C40.4072 242.343 40.6025 242.431 40.9346 242.587C41.2666 242.743 41.6572 243.017 42.1064 243.407C42.5752 243.817 43.0732 244.364 43.6006 245.048C44.1279 245.751 44.6162 246.649 45.0654 247.743C45.5146 248.857 45.8857 250.194 46.1787 251.757C46.4717 253.319 46.6182 255.175 46.6182 257.323C46.6182 259.433 46.4814 261.259 46.208 262.802C45.9541 264.364 45.5635 265.692 45.0361 266.786C44.5283 267.899 43.8838 268.798 43.1025 269.482C42.3408 270.185 41.4619 270.741 40.4658 271.151C40.9932 271.483 41.6084 272.001 42.3115 272.704C43.0146 273.407 43.6885 274.384 44.333 275.634C44.9775 276.903 45.5146 278.485 45.9443 280.38C46.3936 282.274 46.6182 284.589 46.6182 287.323C46.6182 289.569 46.4619 291.493 46.1494 293.095C45.8564 294.716 45.4072 296.083 44.8018 297.196C44.2158 298.31 43.4834 299.198 42.6045 299.862C41.7256 300.546 40.7002 301.064 39.5283 301.415C38.376 301.786 37.0771 302.03 35.6318 302.148C34.2061 302.265 32.6533 302.323 30.9736 302.323H11.9307V296.698H30.9736C33.0049 296.698 34.7139 296.562 36.1006 296.288C37.5068 296.034 38.6396 295.497 39.499 294.677C40.3584 293.876 40.9736 292.733 41.3447 291.249C41.7354 289.784 41.9307 287.851 41.9307 285.448C41.9307 282.812 41.7061 280.644 41.2568 278.944C40.8271 277.245 40.2119 275.907 39.4111 274.931C38.6299 273.954 37.6826 273.271 36.5693 272.88C35.4561 272.509 34.2158 272.323 32.8486 272.323H11.9307Z" fill="#121519" />
                </svg>

              </div>

              <div>

                {/* IMG */}
                <img src="AboutUs_udyam_logo.svg" className='w-[76px] h-[180px]'  />

              </div>


            </div>
          </div>

          <div id='img4' className='flex ' style={{ width: '100%', display: 'none' }}>
            {/* <img src={image2}  className='flex object-cover '  style={{width:'100%',}}></img> */}
            {/* <div className=' block w-[100%] Aboutus'>
       <div className=' text-[100px] text-white'>about us</div>
       <div className=' text-white textarea'>
        
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Et pariatur neque tempore, numquam cumque ratione. Ducimus itaque quam sit sed, animi deleniti id amet sunt voluptatum iusto quidem suscipit temporibus veritatis dolor? Quibusdam culpa modi suscipit, quis necessitatibus placeat omnis iure, incidunt animi id cupiditate ipsum, voluptatem et voluptate ratione mollitia asperiores provident accusantium nemo! Voluptatibus 
       </div>
       </div> */}
            <div className=' block w-[100%] Aboutus'>
              <div className=" h-[95px] w-[100%] items-center flex ml-[20px]  ">
                <svg width="69" height="67" viewBox="0 0 69 67" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <rect x="1.5" y="1.5" width="66" height="64" rx="4.5" fill="black" stroke="white" stroke-width="3" />
                  <path d="M38.7725 38.9092H10.3367L7.80371 43.1418L14.1977 53.8441H47.7042L46.8073 52.3459L38.7725 38.907V38.9092ZM10.1884 43.144L11.5279 40.9068H37.579L44.1213 51.851H15.3889L10.1884 43.144Z" fill="white" />
                  <path d="M62.0522 42.6437L51.9085 25.671L45.5979 15.103L36.708 29.9774L50.9676 53.8454H55.9526L62.3512 43.1431L62.0522 42.6437ZM54.759 51.8501H52.1588L39.0927 29.9774L45.5979 19.096L50.1194 26.6698L59.9642 43.1431L54.759 51.8501Z" fill="white" />
                  <path d="M43.9593 12.3651L43.6604 11.8657L41.4703 8.19751H28.6777L18.242 25.6697L11.9639 36.1726H29.7368L43.957 12.3651H43.9593ZM15.5444 34.1751L20.0311 26.6684L29.8712 10.1951H40.2768L41.5723 12.3651L28.5433 34.1751H15.5421H15.5444Z" fill="white" />
                </svg>

              </div>
              <div className=' text-[50px] text-white h-[113px] w-[56vw] justify-between  border-solid border-[0.5px] flex xyz2 '>
                <div className="about_us_title ml-[44px] items-center justify-center  flex ">
                  UDYAM
                </div>
                <div className=" items-center justify-center h-[113px] w-[130px] flex ">
                  <svg width="76" height="71" viewBox="0 0 76 71" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M76 60.6863L64.8854 71L12 71L-8.18568e-06 60.6863L-1.97867e-06 11.3167L5.99998 6L12 1.75741e-05L64.8854 1.13449e-05L76 11.3167L76 60.6863Z" fill="#FEFEFE" />
                    <path d="M51 60L26 35.5L51 11" stroke="black" stroke-width="10" />
                  </svg>


                </div>
              </div>
              {/* also decrease font size */}
              {/* border-solid border-[0.5px] */}
              <div className=' flex text-white w-[54vw] h-[410px] ml-[44px]    textarea mt-[40px]'>
                Lorem ipsum dolor sit amet consectetur adipisicing elit. Et pariatur neque tempore, numquam cumque ratione. Ducimus itaque quam sit sed, animi deleniti id amet sunt voluptatum iusto quidem suscipit temporibus veritatis dolor? Quibusdam culpa modi suscipit, quis necessitatibus placeat omnis iure, incidunt animi id cupiditate ipsum, voluptatem et voluptate ratione
              </div>
              <div className="  ml-[25px] mb-[0px]  ">
              <svg width="46vw" height="59" viewBox="0 0 792 59" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <rect width="396.58" height="59" fill="white" />
                  <rect x="399.08" y="0" width="390.42" height="59" fill="black" stroke="white" stroke-width="0.5" />
                </svg>

              </div>
            </div>
          </div>

        </div>
        {/* backgroundColor: 'green', */}
        <div id="myDiv3" className=' h-full flex ' style={{ cursor: 'pointer', width: '10%' }}>
          {/* This is my div3 */}

          <div id='img5' onClick={handleClick3} className='flex   ' style={{ width: '100%', zIndex: '9' }}>

            <div className="rect text-black items-center flex flex-col  justify-between">
              {/* This is my div3 */}
              <div>
                <svg width="42" height="23" viewBox="0 0 42 23" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M21 1L39.0157 1C40.819 1 41.7013 3.19879 40.3981 4.44528L22.3824 21.6777C21.6092 22.4173 20.3908 22.4173 19.6176 21.6777L1.60189 4.44529C0.29874 3.19879 1.18102 1 2.98434 1L21 1Z" fill="#121519" stroke="black" />
                </svg>

              </div>
              <div>
                <svg width="58" height="307" viewBox="0 0 58 307" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M57.4922 54.9203H34.9922C32.3359 54.9203 29.9141 54.8813 27.7266 54.8031C25.5391 54.7445 23.5762 54.5199 21.8379 54.1293C20.0996 53.7582 18.5859 53.1625 17.2969 52.3422C16.0078 51.5219 14.9336 50.35 14.0742 48.8266C13.2344 47.3031 12.6094 45.3598 12.1992 42.9965C11.7695 40.6527 11.5547 37.7621 11.5547 34.3246V21.141C11.5547 17.7035 11.7695 14.8031 12.1992 12.4398C12.6094 10.0961 13.2344 8.16251 14.0742 6.63907C14.9336 5.11563 16.0078 3.93399 17.2969 3.09415C18.5859 2.27383 20.0996 1.66837 21.8379 1.27774C23.5762 0.906647 25.5391 0.691803 27.7266 0.633209C29.9141 0.574615 32.3359 0.545319 34.9922 0.545319L57.4922 0.545319V6.17032L34.9922 6.17032C32.1797 6.17032 29.7578 6.18985 27.7266 6.22891C25.7148 6.28751 24.0156 6.45352 22.6289 6.72696C21.2422 7.0004 20.1289 7.43008 19.2891 8.01602C18.4492 8.62149 17.8047 9.48087 17.3555 10.5941C16.9062 11.7074 16.6035 13.1137 16.4473 14.8129C16.3105 16.5316 16.2422 18.641 16.2422 21.141V34.3246C16.2422 36.8051 16.3105 38.9047 16.4473 40.6234C16.6035 42.3422 16.9063 43.7484 17.3555 44.8422C17.8047 45.9555 18.4492 46.8148 19.2891 47.4203C20.1289 48.0258 21.2422 48.4652 22.6289 48.7387C24.0156 49.0316 25.7148 49.1977 27.7266 49.2367C29.7578 49.2758 32.1797 49.2953 34.9922 49.2953L57.4922 49.266V54.9203ZM11.8477 91.1371C11.8477 87.3871 12.1211 84.2035 12.668 81.5863C13.2148 78.9691 14.1523 76.8402 15.4805 75.1996C16.8086 73.559 18.5957 72.3676 20.8418 71.6254C23.0879 70.8832 25.9102 70.5121 29.3086 70.5121C32.8242 70.5121 35.7344 70.8832 38.0391 71.6254C40.3438 72.3676 42.1699 73.559 43.5176 75.1996C44.8652 76.8402 45.8125 78.9691 46.3594 81.5863C46.9063 84.2035 47.1797 87.3871 47.1797 91.1371C47.1797 93.7934 47.043 96.0199 46.7695 97.8168C46.4961 99.6137 46.1543 101.079 45.7441 102.211C45.334 103.364 44.8848 104.233 44.3965 104.819C43.9277 105.424 43.4883 105.864 43.0781 106.137L57.4922 106.137L57.4922 111.762L12.4922 111.762V106.137H17.502C17.502 106.137 16.9453 105.668 15.832 104.731C15.0313 103.911 14.3867 103.002 13.8984 102.006C13.4102 101.01 12.9414 99.6137 12.4922 97.8168C12.0625 96.0199 11.8477 93.7934 11.8477 91.1371ZM16.2422 91.1371C16.2422 93.0121 16.2813 94.682 16.3594 96.1469C16.457 97.6117 16.6523 98.9008 16.9453 100.014C17.2383 101.127 17.668 102.065 18.2344 102.827C18.8203 103.608 19.5918 104.243 20.5488 104.731C21.5059 105.219 22.6875 105.571 24.0938 105.786C25.5195 106.02 27.2285 106.137 29.2207 106.137C31.291 106.137 33.0488 106.02 34.4941 105.786C35.959 105.571 37.1797 105.219 38.1563 104.731C39.1523 104.243 39.9336 103.608 40.5 102.827C41.0664 102.065 41.4961 101.127 41.7891 100.014C42.1016 98.9008 42.2969 97.6117 42.375 96.1469C42.4531 94.682 42.4922 93.0121 42.4922 91.1371C42.4922 88.9496 42.4238 87.0551 42.2871 85.4535C42.1504 83.8715 41.9063 82.5238 41.5547 81.4106C41.2031 80.2973 40.7148 79.3891 40.0898 78.6859C39.4648 78.0023 38.6641 77.4652 37.6875 77.0746C36.7109 76.7035 35.5293 76.4496 34.1426 76.3129C32.7754 76.1957 31.1641 76.1371 29.3086 76.1371C27.4727 76.1371 25.8711 76.1957 24.5039 76.3129C23.1563 76.4496 21.9941 76.7035 21.0176 77.0746C20.0605 77.4652 19.2695 78.0023 18.6445 78.6859C18.0195 79.3891 17.5313 80.2973 17.1797 81.4106C16.8281 82.5238 16.584 83.8715 16.4473 85.4535C16.3105 87.0551 16.2422 88.9496 16.2422 91.1371ZM42.4922 147.95C42.4922 145.762 42.4238 143.868 42.2871 142.266C42.1504 140.684 41.9063 139.336 41.5547 138.223C41.2031 137.11 40.7148 136.202 40.0898 135.498C39.4648 134.815 38.6641 134.278 37.6875 133.887C36.7109 133.516 35.5293 133.262 34.1426 133.125C32.7754 133.008 31.1641 132.95 29.3086 132.95C27.4727 132.95 25.8711 133.008 24.5039 133.125C23.1563 133.262 21.9941 133.516 21.0176 133.887C20.0605 134.278 19.2695 134.815 18.6445 135.498C18.0195 136.202 17.5313 137.11 17.1797 138.223C16.8281 139.336 16.584 140.684 16.4473 142.266C16.3105 143.868 16.2422 145.762 16.2422 147.95C16.2422 149.825 16.2813 151.495 16.3594 152.959C16.457 154.424 16.6523 155.713 16.9453 156.827C17.2578 157.94 17.6973 158.877 18.2637 159.639C18.8496 160.42 19.6211 161.055 20.5781 161.543C21.5547 162.032 22.7559 162.383 24.1816 162.598C25.627 162.832 27.3652 162.95 29.3965 162.95C31.4277 162.95 33.166 162.832 34.6113 162.598C36.0566 162.383 37.2578 162.032 38.2148 161.543C39.1914 161.055 39.9629 160.42 40.5293 159.639C41.0957 158.877 41.5254 157.94 41.8184 156.827C42.1113 155.713 42.2969 154.424 42.375 152.959C42.4531 151.495 42.4922 149.825 42.4922 147.95ZM17.1797 168.575C13.8984 168.575 11.1738 168.204 9.00586 167.461C6.83789 166.719 5.08984 165.528 3.76172 163.887C2.41406 162.246 1.47656 160.118 0.949219 157.5C0.421875 154.883 0.158203 151.7 0.158203 147.95C0.158203 144.434 0.314453 141.475 0.626953 139.073C0.939453 136.69 1.4375 134.766 2.12109 133.301C2.78516 131.836 3.6543 130.782 4.72852 130.137C5.7832 129.512 7.07227 129.2 8.5957 129.2V134.825C7.83398 134.825 7.20898 135.02 6.7207 135.411C6.23242 135.821 5.85156 136.524 5.57813 137.52C5.30469 138.516 5.11914 139.854 5.02148 141.534C4.9043 143.233 4.8457 145.371 4.8457 147.95C4.8457 150.762 4.95313 153.125 5.16797 155.039C5.36328 156.954 5.8418 158.496 6.60352 159.668C7.36523 160.84 8.51758 161.68 10.0605 162.188C11.6035 162.696 13.6641 162.95 16.2422 162.95C15.7734 162.676 15.2656 162.237 14.7188 161.631C14.1719 161.045 13.6641 160.176 13.1953 159.024C12.7266 157.891 12.3359 156.426 12.0234 154.629C11.7109 152.832 11.5547 150.606 11.5547 147.95C11.5547 144.2 11.8379 141.016 12.4043 138.399C12.9512 135.782 13.8984 133.653 15.2461 132.012C16.5938 130.371 18.4102 129.18 20.6953 128.438C22.9805 127.696 25.8516 127.325 29.3086 127.325C32.8242 127.325 35.7344 127.696 38.0391 128.438C40.3438 129.18 42.1699 130.371 43.5176 132.012C44.8652 133.653 45.8125 135.782 46.3594 138.399C46.9063 141.016 47.1797 144.2 47.1797 147.95C47.1797 150.606 47.043 152.832 46.7695 154.629C46.4961 156.426 46.1543 157.891 45.7441 159.024C45.334 160.176 44.8848 161.045 44.3965 161.631C43.9277 162.237 43.498 162.676 43.1074 162.95L46.2422 162.95V168.575L17.1797 168.575ZM17.1211 218.678C16.8867 218.62 16.3008 218.18 15.3633 217.36C14.6602 216.774 14.0352 215.993 13.4883 215.016C12.9609 214.039 12.5508 212.731 12.2578 211.09C11.9453 209.469 11.7891 207.33 11.7891 204.674C11.7891 201.139 11.9746 198.121 12.3457 195.621C12.6973 193.121 13.2441 191.08 13.9863 189.498C14.748 187.916 15.7148 186.754 16.8867 186.012C18.0586 185.289 19.4551 184.928 21.0762 184.928C22.7754 184.928 24.2109 185.123 25.3828 185.514C26.5742 185.924 27.5703 186.51 28.3711 187.272C29.1719 188.053 29.7969 188.991 30.2461 190.084C30.6953 191.178 31.0371 192.418 31.2715 193.805C31.5059 195.211 31.6523 196.745 31.7109 198.405C31.7695 200.065 31.7988 201.832 31.7988 203.707C31.7988 206.383 31.6816 208.62 31.4473 210.416C31.2324 212.213 30.9492 213.678 30.5977 214.811C30.2656 215.963 29.9043 216.832 29.5137 217.418C29.123 218.004 28.7617 218.424 28.4297 218.678C30.6172 218.678 32.4824 218.58 34.0254 218.385C35.5684 218.209 36.8574 217.907 37.8926 217.477C38.9277 217.067 39.748 216.53 40.3535 215.866C40.9785 215.202 41.4473 214.381 41.7598 213.405C42.0723 212.448 42.2676 211.325 42.3457 210.036C42.4434 208.746 42.4922 207.272 42.4922 205.612C42.4922 203.034 42.4238 200.895 42.2871 199.196C42.1699 197.496 41.9258 196.149 41.5547 195.153C41.1836 194.157 40.666 193.454 40.002 193.043C39.3574 192.633 38.5078 192.428 37.4531 192.428V186.803C39.2305 186.803 40.7344 187.116 41.9648 187.741C43.1953 188.385 44.1914 189.44 44.9531 190.905C45.7344 192.389 46.3008 194.332 46.6523 196.735C47.0039 199.137 47.1797 202.096 47.1797 205.612C47.1797 209.049 46.8965 211.959 46.3301 214.342C45.7637 216.725 44.7676 218.649 43.3418 220.114C41.916 221.598 39.9922 222.663 37.5703 223.307C35.168 223.971 32.1211 224.303 28.4297 224.303H12.4922V218.678H17.1211ZM16.2422 205.612C16.2422 208.092 16.3594 210.163 16.5938 211.823C16.8281 213.502 17.1797 214.85 17.6484 215.866C18.1172 216.881 18.7031 217.604 19.4063 218.034C20.1094 218.463 20.9297 218.678 21.8672 218.678C22.8047 218.678 23.5957 218.424 24.2402 217.916C24.9043 217.428 25.4414 216.598 25.8516 215.426C26.2617 214.274 26.5547 212.741 26.7305 210.827C26.9258 208.913 27.0234 206.549 27.0234 203.737C27.0234 200.924 26.9746 198.649 26.877 196.911C26.7793 195.192 26.5547 193.864 26.2031 192.926C25.8516 191.989 25.334 191.354 24.6504 191.022C23.9668 190.709 23.0391 190.553 21.8672 190.553C20.6953 190.553 19.7383 190.719 18.9961 191.051C18.2734 191.403 17.707 192.106 17.2969 193.161C16.8867 194.215 16.6035 195.729 16.4473 197.702C16.3105 199.694 16.2422 202.33 16.2422 205.612ZM12.4922 276.457V270.832H31.5352C33.5664 270.832 35.2754 270.696 36.6621 270.422C38.0684 270.168 39.2012 269.631 40.0605 268.811C40.9199 268.01 41.5352 266.868 41.9063 265.383C42.2969 263.918 42.4922 261.985 42.4922 259.582C42.4922 256.946 42.2676 254.778 41.8184 253.079C41.3887 251.379 40.7734 250.041 39.9727 249.065C39.1914 248.088 38.2441 247.405 37.1309 247.014C36.0176 246.643 34.7773 246.457 33.4102 246.457H12.4922V240.832H46.2422L46.2422 246.457H40.9102C40.9688 246.477 41.1641 246.565 41.4961 246.721C41.8281 246.877 42.2188 247.151 42.668 247.541C43.1367 247.952 43.6348 248.498 44.1621 249.182C44.6895 249.885 45.1777 250.784 45.627 251.877C46.0762 252.991 46.4473 254.329 46.7402 255.891C47.0332 257.454 47.1797 259.309 47.1797 261.457C47.1797 263.567 47.043 265.393 46.7695 266.936C46.5156 268.498 46.125 269.827 45.5977 270.92C45.0898 272.034 44.4453 272.932 43.6641 273.616C42.9023 274.319 42.0234 274.875 41.0273 275.286C41.5547 275.618 42.1699 276.135 42.873 276.838C43.5762 277.541 44.25 278.518 44.8945 279.768C45.5391 281.038 46.0762 282.62 46.5059 284.514C46.9551 286.409 47.1797 288.723 47.1797 291.457C47.1797 293.704 47.0234 295.627 46.7109 297.229C46.418 298.85 45.9688 300.217 45.3633 301.33C44.7773 302.444 44.0449 303.332 43.166 303.996C42.2871 304.68 41.2617 305.198 40.0898 305.549C38.9375 305.92 37.6387 306.164 36.1934 306.282C34.7676 306.399 33.2148 306.457 31.5352 306.457H12.4922V300.832H31.5352C33.5664 300.832 35.2754 300.696 36.6621 300.422C38.0684 300.168 39.2012 299.631 40.0605 298.811C40.9199 298.01 41.5352 296.868 41.9063 295.383C42.2969 293.918 42.4922 291.985 42.4922 289.582C42.4922 286.946 42.2676 284.778 41.8184 283.079C41.3887 281.379 40.7734 280.041 39.9727 279.065C39.1914 278.088 38.2441 277.405 37.1309 277.014C36.0176 276.643 34.7773 276.457 33.4102 276.457H12.4922Z" fill="#121519" />
                </svg>

              </div>
              <div>
                {/* img */}
                <img src="AboutUs_udgam_logo.svg" className='w-[120px] h-[160px]'  />
              </div>

            </div>

          </div>

          <div id='img6' className='flex' style={{ width: '100%', display: 'none' }}>
            {/* <img src={image2}  className='flex object-cover '  style={{width:'100%',}}></img> */}
            <div className=' block w-[100%] Aboutus'>
              <div className=" h-[95px] w-[100%] items-center flex ml-[20px]  ">
                <svg width="69" height="67" viewBox="0 0 69 67" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <rect x="1.5" y="1.5" width="66" height="64" rx="4.5" fill="black" stroke="white" stroke-width="3" />
                  <path d="M38.7725 38.9092H10.3367L7.80371 43.1418L14.1977 53.8441H47.7042L46.8073 52.3459L38.7725 38.907V38.9092ZM10.1884 43.144L11.5279 40.9068H37.579L44.1213 51.851H15.3889L10.1884 43.144Z" fill="white" />
                  <path d="M62.0522 42.6437L51.9085 25.671L45.5979 15.103L36.708 29.9774L50.9676 53.8454H55.9526L62.3512 43.1431L62.0522 42.6437ZM54.759 51.8501H52.1588L39.0927 29.9774L45.5979 19.096L50.1194 26.6698L59.9642 43.1431L54.759 51.8501Z" fill="white" />
                  <path d="M43.9593 12.3651L43.6604 11.8657L41.4703 8.19751H28.6777L18.242 25.6697L11.9639 36.1726H29.7368L43.957 12.3651H43.9593ZM15.5444 34.1751L20.0311 26.6684L29.8712 10.1951H40.2768L41.5723 12.3651L28.5433 34.1751H15.5421H15.5444Z" fill="white" />
                </svg>

              </div>
              <div className=' text-[50px] text-white h-[113px] w-[56vw] justify-between  border-solid border-[0.5px] flex xyz3 '>
                <div className="about_us_title ml-[44px] items-center justify-center  flex ">
                  UDGAM
                </div>
                <div className=" items-center justify-center h-[113px] w-[130px] flex ">
                  <svg width="76" height="71" viewBox="0 0 76 71" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M76 60.6863L64.8854 71L12 71L-8.18568e-06 60.6863L-1.97867e-06 11.3167L5.99998 6L12 1.75741e-05L64.8854 1.13449e-05L76 11.3167L76 60.6863Z" fill="#FEFEFE" />
                    <path d="M51 60L26 35.5L51 11" stroke="black" stroke-width="10" />
                  </svg>


                </div>
              </div>
              {/* also decrease font size */}
              {/* border-solid border-[0.5px] */}
              <div className=' flex text-white w-[54vw] h-[410px] ml-[44px]    textarea mt-[40px]'>
                Lorem ipsum dolor sit amet consectetur adipisicing elit. Et pariatur neque tempore, numquam cumque ratione. Ducimus itaque quam sit sed, animi deleniti id amet sunt voluptatum iusto quidem suscipit temporibus veritatis dolor? Quibusdam culpa modi suscipit, quis necessitatibus placeat omnis iure, incidunt animi id cupiditate ipsum, voluptatem et voluptate ratione
              </div>
              <div className="  ml-[25px] mb-[0px]  ">
              <svg width="46vw" height="59" viewBox="0 0 792 59" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <rect width="396.58" height="59" fill="white" />
                  <rect x="399.08" y="0" width="390.42" height="59" fill="black" stroke="white" stroke-width="0.5" />
                </svg>

              </div>
            </div>
          </div>


        </div>
        {/* backgroundColor: 'yellow', */}
        <div id="myDiv4" className=' h-full flex ' style={{ cursor: 'pointer', width: '10%' }}>
          {/* This is my div4 */}


          <div id='img7' onClick={handleClick4} className='flex   ' style={{ width: '100%',zIndex: '12' }}>
            {/* This is my div4 */}
            <div className="rect text-black flex  items-center flex-col  justify-between">
              {/* This is my div4 */}
              <div>
                <svg width="42" height="23" viewBox="0 0 42 23" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M21 1L39.0157 1C40.819 1 41.7013 3.19879 40.3981 4.44528L22.3824 21.6777C21.6092 22.4173 20.3908 22.4173 19.6176 21.6777L1.60189 4.44529C0.29874 3.19879 1.18102 1 2.98434 1L21 1Z" fill="#121519" stroke="black" />
                </svg>

              </div>
              <div>
                <svg width="120" height="321" viewBox="0 0 46 321" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M42.25 6.11871H1V0.493713H46V9.86871L6.625 36.0894L46 62.3101V71.275H1V65.65H41.6348L1 38.9312V33.2476L42.25 6.11871ZM5.62891 123.253C5.39453 123.195 4.80859 122.755 3.87109 121.935C3.16797 121.349 2.54297 120.568 1.99609 119.591C1.46875 118.615 1.05859 117.306 0.765625 115.666C0.453125 114.044 0.296875 111.906 0.296875 109.25C0.296875 105.714 0.482422 102.697 0.853516 100.197C1.20508 97.6968 1.75195 95.6558 2.49414 94.0738C3.25586 92.4918 4.22266 91.3297 5.39453 90.5875C6.56641 89.8648 7.96289 89.5035 9.58398 89.5035C11.2832 89.5035 12.7188 89.6988 13.8906 90.0894C15.082 90.4996 16.0781 91.0855 16.8789 91.8472C17.6797 92.6285 18.3047 93.566 18.7539 94.6597C19.2031 95.7535 19.5449 96.9937 19.7793 98.3804C20.0137 99.7867 20.1602 101.32 20.2188 102.98C20.2773 104.64 20.3066 106.408 20.3066 108.283C20.3066 110.959 20.1895 113.195 19.9551 114.992C19.7402 116.789 19.457 118.253 19.1055 119.386C18.7734 120.539 18.4121 121.408 18.0215 121.994C17.6309 122.58 17.2695 123 16.9375 123.253C19.125 123.253 20.9902 123.156 22.5332 122.961C24.0762 122.785 25.3652 122.482 26.4004 122.052C27.4355 121.642 28.2559 121.105 28.8613 120.441C29.4863 119.777 29.9551 118.957 30.2676 117.98C30.5801 117.023 30.7754 115.9 30.8535 114.611C30.9512 113.322 31 111.847 31 110.187C31 107.609 30.9316 105.47 30.7949 103.771C30.6777 102.072 30.4336 100.724 30.0625 99.7281C29.6914 98.732 29.1738 98.0289 28.5098 97.6187C27.8652 97.2086 27.0156 97.0035 25.9609 97.0035V91.3785C27.7383 91.3785 29.2422 91.691 30.4727 92.316C31.7031 92.9605 32.6992 94.0152 33.4609 95.48C34.2422 96.9644 34.8086 98.9078 35.1602 101.31C35.5117 103.712 35.6875 106.671 35.6875 110.187C35.6875 113.625 35.4043 116.535 34.8379 118.918C34.2715 121.3 33.2754 123.224 31.8496 124.689C30.4238 126.173 28.5 127.238 26.0781 127.882C23.6758 128.546 20.6289 128.878 16.9375 128.878H1V123.253H5.62891ZM4.75 110.187C4.75 112.668 4.86719 114.738 5.10156 116.398C5.33594 118.078 5.6875 119.425 6.15625 120.441C6.625 121.457 7.21094 122.179 7.91406 122.609C8.61719 123.039 9.4375 123.253 10.375 123.253C11.3125 123.253 12.1035 123 12.748 122.492C13.4121 122.003 13.9492 121.173 14.3594 120.002C14.7695 118.849 15.0625 117.316 15.2383 115.402C15.4336 113.488 15.5313 111.125 15.5313 108.312C15.5313 105.5 15.4824 103.224 15.3848 101.486C15.2871 99.7672 15.0625 98.439 14.7109 97.5015C14.3594 96.564 13.8418 95.9293 13.1582 95.5972C12.4746 95.2847 11.5469 95.1285 10.375 95.1285C9.20313 95.1285 8.24609 95.2945 7.50391 95.6265C6.78125 95.9781 6.21484 96.6812 5.80469 97.7359C5.39453 98.7906 5.11133 100.304 4.95508 102.277C4.81836 104.269 4.75 106.906 4.75 110.187ZM16.3809 165.095C16.3809 162.439 16.4199 160.105 16.498 158.093C16.5762 156.082 16.7324 154.343 16.9668 152.878C17.2207 151.433 17.5723 150.222 18.0215 149.246C18.4707 148.289 19.0664 147.527 19.8086 146.961C20.5703 146.394 21.498 145.994 22.5918 145.759C23.7051 145.525 24.9063 145.408 26.1953 145.408C27.9531 145.408 29.4277 145.779 30.6191 146.521C31.8301 147.263 32.8066 148.455 33.5488 150.095C34.3105 151.736 34.8574 153.865 35.1895 156.482C35.5215 159.099 35.6875 162.283 35.6875 166.033C35.6875 169.744 35.4922 172.8 35.1016 175.203C34.7109 177.625 34.1055 179.539 33.2852 180.945C32.4844 182.371 31.4688 183.367 30.2383 183.933C29.0078 184.5 27.543 184.783 25.8438 184.783V179.158C26.8984 179.158 27.7578 178.953 28.4219 178.543C29.0859 178.152 29.6035 177.459 29.9746 176.462C30.3652 175.466 30.6289 174.119 30.7656 172.419C30.9219 170.74 31 168.611 31 166.033C31 163.22 30.9609 160.857 30.8828 158.943C30.8047 157.029 30.6094 155.486 30.2969 154.314C29.9844 153.142 29.5059 152.302 28.8613 151.794C28.2168 151.287 27.3281 151.033 26.1953 151.033C25.5313 151.033 24.877 151.072 24.2324 151.15C23.6074 151.248 23.0898 151.453 22.6797 151.765C22.2695 152.078 21.957 152.537 21.7422 153.142C21.5273 153.748 21.3613 154.568 21.2441 155.603C21.1465 156.658 21.0879 157.957 21.0684 159.5C21.0684 161.043 21.0684 162.908 21.0684 165.095C21.0684 167.752 21.0098 170.076 20.8926 172.068C20.7754 174.08 20.5703 175.818 20.2773 177.283C19.9844 178.748 19.5352 179.959 18.9297 180.916C18.3242 181.873 17.6602 182.634 16.9375 183.201C16.2344 183.787 15.3945 184.197 14.418 184.431C13.4609 184.666 12.3477 184.783 11.0781 184.783C9.80859 184.783 8.66602 184.666 7.65039 184.431C6.6543 184.197 5.76563 183.787 4.98438 183.201C4.22266 182.615 3.55859 181.814 2.99219 180.798C2.44531 179.802 1.99609 178.543 1.64453 177.019C1.3125 175.496 1.06836 173.669 0.912109 171.541C0.736328 169.431 0.648438 166.97 0.648438 164.158C0.648438 160.642 0.824219 157.683 1.17578 155.281C1.52734 152.898 2.08398 150.974 2.8457 149.509C3.62695 148.044 4.63281 146.99 5.86328 146.345C7.09375 145.72 8.59766 145.408 10.375 145.408V151.033C9.20313 151.033 8.24609 151.228 7.50391 151.619C6.78125 152.029 6.21484 152.732 5.80469 153.728C5.39453 154.724 5.11133 156.062 4.95508 157.742C4.81836 159.441 4.75 161.58 4.75 164.158C4.75 166.502 4.79883 168.494 4.89648 170.134C5.01367 171.794 5.18945 173.181 5.42383 174.294C5.6582 175.408 5.94141 176.287 6.27344 176.931C6.60547 177.576 7.00586 178.064 7.47461 178.396C7.94336 178.728 8.46094 178.933 9.02734 179.011C9.61328 179.109 10.2578 179.158 10.9609 179.158C11.6055 179.158 12.1719 179.109 12.6602 179.011C13.168 178.933 13.666 178.738 14.1543 178.425C14.6621 178.113 15.043 177.654 15.2969 177.048C15.5508 176.443 15.7559 175.613 15.9121 174.558C16.0879 173.523 16.2051 172.234 16.2637 170.691C16.3418 169.148 16.3809 167.283 16.3809 165.095ZM1 235.033H20.043C22.0742 235.033 23.7832 234.877 25.1699 234.564C26.5762 234.252 27.709 233.627 28.5684 232.689C29.4277 231.752 30.043 230.423 30.4141 228.705C30.8047 226.986 31 224.72 31 221.908C31 218.861 30.7754 216.361 30.3262 214.408C29.8965 212.474 29.2813 210.951 28.4805 209.837C27.6992 208.724 26.752 207.953 25.6387 207.523C24.5254 207.113 23.2852 206.908 21.918 206.908H1V201.283H46V206.908H29.418C30.3359 207.298 31.127 207.855 31.791 208.578C32.4551 209.3 33.0215 210.13 33.4902 211.068C33.959 212.025 34.3301 213.05 34.6035 214.144C34.8965 215.238 35.1211 216.341 35.2773 217.455C35.4336 218.587 35.541 219.691 35.5996 220.765C35.6582 221.859 35.6875 222.865 35.6875 223.783C35.6875 226.283 35.5313 228.431 35.2188 230.228C34.9258 232.044 34.4766 233.578 33.8711 234.828C33.2852 236.097 32.5527 237.113 31.6738 237.875C30.7949 238.636 29.7695 239.222 28.5977 239.632C27.4453 240.062 26.1465 240.345 24.7012 240.482C23.2754 240.619 21.7227 240.687 20.043 240.687L1 240.658V235.033ZM5.62891 290.82C5.39453 290.761 4.80859 290.322 3.87109 289.502C3.16797 288.916 2.54297 288.134 1.99609 287.158C1.46875 286.181 1.05859 284.873 0.765625 283.232C0.453125 281.611 0.296875 279.472 0.296875 276.816C0.296875 273.281 0.482422 270.263 0.853516 267.763C1.20508 265.263 1.75195 263.222 2.49414 261.64C3.25586 260.058 4.22266 258.896 5.39453 258.154C6.56641 257.431 7.96289 257.07 9.58398 257.07C11.2832 257.07 12.7188 257.265 13.8906 257.656C15.082 258.066 16.0781 258.652 16.8789 259.414C17.6797 260.195 18.3047 261.132 18.7539 262.226C19.2031 263.32 19.5449 264.56 19.7793 265.947C20.0137 267.353 20.1602 268.886 20.2188 270.546C20.2773 272.207 20.3066 273.974 20.3066 275.849C20.3066 278.525 20.1895 280.761 19.9551 282.558C19.7402 284.355 19.457 285.82 19.1055 286.953C18.7734 288.105 18.4121 288.974 18.0215 289.56C17.6309 290.146 17.2695 290.566 16.9375 290.82C19.125 290.82 20.9902 290.722 22.5332 290.527C24.0762 290.351 25.3652 290.048 26.4004 289.619C27.4355 289.209 28.2559 288.671 28.8613 288.007C29.4863 287.343 29.9551 286.523 30.2676 285.546C30.5801 284.589 30.7754 283.466 30.8535 282.177C30.9512 280.888 31 279.414 31 277.753C31 275.175 30.9316 273.037 30.7949 271.337C30.6777 269.638 30.4336 268.291 30.0625 267.294C29.6914 266.298 29.1738 265.595 28.5098 265.185C27.8652 264.775 27.0156 264.57 25.9609 264.57V258.945C27.7383 258.945 29.2422 259.257 30.4727 259.882C31.7031 260.527 32.6992 261.582 33.4609 263.046C34.2422 264.531 34.8086 266.474 35.1602 268.877C35.5117 271.279 35.6875 274.238 35.6875 277.753C35.6875 281.191 35.4043 284.101 34.8379 286.484C34.2715 288.867 33.2754 290.791 31.8496 292.255C30.4238 293.74 28.5 294.804 26.0781 295.449C23.6758 296.113 20.6289 296.445 16.9375 296.445H1V290.82H5.62891ZM4.75 277.753C4.75 280.234 4.86719 282.304 5.10156 283.964C5.33594 285.644 5.6875 286.992 6.15625 288.007C6.625 289.023 7.21094 289.746 7.91406 290.175C8.61719 290.605 9.4375 290.82 10.375 290.82C11.3125 290.82 12.1035 290.566 12.748 290.058C13.4121 289.57 13.9492 288.74 14.3594 287.568C14.7695 286.416 15.0625 284.882 15.2383 282.968C15.4336 281.054 15.5313 278.691 15.5313 275.878C15.5313 273.066 15.4824 270.791 15.3848 269.052C15.2871 267.334 15.0625 266.005 14.7109 265.068C14.3594 264.13 13.8418 263.496 13.1582 263.164C12.4746 262.851 11.5469 262.695 10.375 262.695C9.20313 262.695 8.24609 262.861 7.50391 263.193C6.78125 263.544 6.21484 264.248 5.80469 265.302C5.39453 266.357 5.11133 267.871 4.95508 269.843C4.81836 271.836 4.75 274.472 4.75 277.753ZM46 314.849V320.474H1V314.849H46Z" fill="#121519" />
                </svg>

              </div>
              <div>
                {/* img */}
                <img src="AboutUs_mashal_logo2.svg" className='w-[100px] h-[160px]'  />

              </div>
            </div>
          </div>

          <div id='img8' className='flex' style={{ width: '100%', display: 'none' }}>
            <div className=' block w-[100%] Aboutus'>
              <div className=" h-[95px] w-[100%] items-center flex ml-[20px]  ">
                <svg width="69" height="67" viewBox="0 0 69 67" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <rect x="1.5" y="1.5" width="66" height="64" rx="4.5" fill="black" stroke="white" stroke-width="3" />
                  <path d="M38.7725 38.9092H10.3367L7.80371 43.1418L14.1977 53.8441H47.7042L46.8073 52.3459L38.7725 38.907V38.9092ZM10.1884 43.144L11.5279 40.9068H37.579L44.1213 51.851H15.3889L10.1884 43.144Z" fill="white" />
                  <path d="M62.0522 42.6437L51.9085 25.671L45.5979 15.103L36.708 29.9774L50.9676 53.8454H55.9526L62.3512 43.1431L62.0522 42.6437ZM54.759 51.8501H52.1588L39.0927 29.9774L45.5979 19.096L50.1194 26.6698L59.9642 43.1431L54.759 51.8501Z" fill="white" />
                  <path d="M43.9593 12.3651L43.6604 11.8657L41.4703 8.19751H28.6777L18.242 25.6697L11.9639 36.1726H29.7368L43.957 12.3651H43.9593ZM15.5444 34.1751L20.0311 26.6684L29.8712 10.1951H40.2768L41.5723 12.3651L28.5433 34.1751H15.5421H15.5444Z" fill="white" />
                </svg>

              </div>
              <div className=' text-[50px] text-white h-[113px] w-[56vw] justify-between  border-solid border-[0.5px] flex xyz4 '>
                <div className="about_us_title ml-[44px] items-center justify-center  flex ">
                  MASHAL
                </div>
                <div className=" items-center justify-center h-[113px] w-[130px] flex ">
                  <svg width="76" height="71" viewBox="0 0 76 71" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M76 60.6863L64.8854 71L12 71L-8.18568e-06 60.6863L-1.97867e-06 11.3167L5.99998 6L12 1.75741e-05L64.8854 1.13449e-05L76 11.3167L76 60.6863Z" fill="#FEFEFE" />
                    <path d="M51 60L26 35.5L51 11" stroke="black" stroke-width="10" />
                  </svg>


                </div>
              </div>
              {/* also decrease font size */}
              {/* border-solid border-[0.5px] */}
              <div className=' flex text-white w-[54vw] h-[410px] ml-[44px]    textarea mt-[40px]'>
                Lorem ipsum dolor sit amet consectetur adipisicing elit. Et pariatur neque tempore, numquam cumque ratione. Ducimus itaque quam sit sed, animi deleniti id amet sunt voluptatum iusto quidem suscipit temporibus veritatis dolor? Quibusdam culpa modi suscipit, quis necessitatibus placeat omnis iure, incidunt animi id cupiditate ipsum, voluptatem et voluptate ratione
              </div>
              <div className="  ml-[25px] mb-[0px]  ">
              <svg width="46vw" height="59" viewBox="0 0 792 59" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <rect width="396.58" height="59" fill="white" />
                  <rect x="399.08" y="0" width="390.42" height="59" fill="black" stroke="white" stroke-width="0.5" />
                </svg>

              </div>
            </div>
            {/* <img src={image2}  className='flex object-cover '  style={{width:'100%',}}></img> */}
          </div>
        </div>

      </div>

    </div>
    <div className="mobileview">
        <div id="controls-carousel" className="relative w-full" data-carousel="static">
          {/* Carousel wrapper */}
          <div className="carousel_container h-[100vh] relative overflow-hidden rounded-lg md:h-96">
            {Array.from({ length: 4 }).map((_, index) => (
              <div
                key={index}
                className={`${index === currentSlide ? 'duration-700 ease-in-out' : 'hidden'} absolute w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2`}
                data-carousel-item={index === currentSlide ? 'active' : ''}
              >
                <img
                  src={`about_us_mobile_${index}.svg`} 
                  className="mobile_aboutus_card absolute w-[100%] -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2 block "
                  alt={`Slide ${index + 1}`}
                />
              </div>
            ))}
          </div>
          {/* Slider controls */}
          <button
            type="button"
            className="absolute opacity-[0%] top-0 start-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none"
            data-carousel-prev
            onClick={prevSlide}
          >
            {/* Your Previous button contents */}
            Previous
          </button>
          <button
            type="button"
            className="absolute opacity-[0%] top-0 end-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none"
            data-carousel-next
            onClick={nextSlide}
          >
            {/* Your Next button contents */}
            Next
          </button>
        </div>
      </div>
    </div>




  );
};

export default About;
